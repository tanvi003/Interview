{"ast":null,"code":"var _jsxFileName = \"/Users/tanvimahajan/Downloads/InterviewAs/src/InterviewList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './InterviewList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InterviewList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      interviews: [],\n      participants: [],\n      distinctSchedules: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/distinctschedules').then(res => {\n      console.log(\"res => \", res);\n      this.setState({\n        distinctSchedules: res.data\n      });\n      console.log(\"Updated STATE : \", this.state.participants);\n    }).catch(error => {\n      console.log(\"Error : \", error);\n    });\n    axios.get('http://localhost:5000/participants').then(res => {\n      console.log(\"res => \", res);\n      this.setState({\n        participants: res.data\n      });\n      console.log(\"Updated STATE : \", this.state.participants);\n    }).catch(error => {\n      console.log(\"Error : \", error);\n    });\n    axios.get('http://localhost:5000/interviews').then(res => {\n      console.log(\"res => \", res);\n      this.setState({\n        interviews: res.data\n      });\n    }).catch(error => {\n      console.log(\"Error : \", error);\n    });\n  }\n\n  render() {\n    // Create Particpant Map\n    let participantMap = new Map();\n\n    if (this.state.participants) {\n      this.state.participants.forEach(part => {\n        participantMap.set(part.id, `${part.name}(${part.email})`);\n      }); // for (let [key, value] of participantMap) {\n      //   console.log(key + ' =>  ' + value)\n      // }\n    } // console.log(\"distinctSchedules -> \", this.state.distinctSchedules);\n    // console.log(\"interviews -> \", this.state.interviews);\n\n\n    let finalScehule = this.state.distinctSchedules.map(ds => {\n      let tempRes = this.state.interviews.filter(itr => ds.date === itr.date && ds.startTime === itr.startTime && ds.endTime === itr.endTime);\n      let midResult = tempRes.map(tr => tr.participantId);\n      return {\n        date: ds.date,\n        startTime: ds.startTime,\n        endTime: ds.endTime,\n        participants: midResult\n      };\n    });\n    console.log(\"finalScehule : \", finalScehule);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-light section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"section-heading\",\n        children: \"Upcoming Interviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: finalScehule.map(itr => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"para-top\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"date\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 39\n                }, this), \" \", itr.date, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"time\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Timing:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 39\n                }, this), \" \", itr.startTime, \" to \", itr.endTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"date\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Participants:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group\",\n              children: itr.participants.map(oneP => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: participantMap.get(oneP)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: '/edit',\n                state: {\n                  participants: itr.participants,\n                  pdate: itr.date,\n                  pstarttime: itr.startTime,\n                  pendtime: itr.endTime\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit\",\n                children: \"Edit Interview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 18\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default InterviewList;","map":{"version":3,"sources":["/Users/tanvimahajan/Downloads/InterviewAs/src/InterviewList.js"],"names":["React","Component","axios","Link","InterviewList","constructor","props","state","interviews","participants","distinctSchedules","componentDidMount","get","then","res","console","log","setState","data","catch","error","render","participantMap","Map","forEach","part","set","id","name","email","finalScehule","map","ds","tempRes","filter","itr","date","startTime","endTime","midResult","tr","participantId","oneP","pathname","pdate","pstarttime","pendtime"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './InterviewList.css'\n\nclass InterviewList extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      interviews: [],\n      participants: [],\n      distinctSchedules: []\n    }\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/distinctschedules')\n      .then((res) => {\n        console.log(\"res => \", res);\n        this.setState({\n          distinctSchedules: res.data,\n        })\n\n        console.log(\"Updated STATE : \", this.state.participants);\n      })\n      .catch((error) => {\n        console.log(\"Error : \", error);\n      })\n\n\n    axios.get('http://localhost:5000/participants')\n      .then((res) => {\n        console.log(\"res => \", res);\n        this.setState({\n          participants: res.data,\n        })\n\n        console.log(\"Updated STATE : \", this.state.participants);\n      })\n      .catch((error) => {\n        console.log(\"Error : \", error);\n      })\n\n\n    axios.get('http://localhost:5000/interviews')\n      .then((res) => {\n        console.log(\"res => \", res);\n        this.setState({\n          interviews: res.data,\n        })\n      })\n      .catch((error) => {\n        console.log(\"Error : \", error);\n      })\n  }\n\n\n  render() {\n\n    // Create Particpant Map\n    let participantMap = new Map();\n    if (this.state.participants) {\n      this.state.participants.forEach((part) => {\n        participantMap.set(part.id, `${part.name}(${part.email})`)\n      })\n      // for (let [key, value] of participantMap) {\n      //   console.log(key + ' =>  ' + value)\n      // }\n    }\n\n    // console.log(\"distinctSchedules -> \", this.state.distinctSchedules);\n    // console.log(\"interviews -> \", this.state.interviews);\n\n    let finalScehule = this.state.distinctSchedules.map((ds) => {\n      let tempRes = this.state.interviews.filter(itr => (\n        (ds.date === itr.date) &&\n        (ds.startTime === itr.startTime) &&\n        (ds.endTime === itr.endTime)));\n\n      let midResult = tempRes.map((tr) => tr.participantId);\n      return {\n        date: ds.date,\n        startTime: ds.startTime,\n        endTime: ds.endTime,\n        participants: midResult\n      }\n    })\n\n    console.log(\"finalScehule : \", finalScehule);\n\n\n    return (\n      <div className=\"bg-light section\">\n        <p className='section-heading'>Upcoming Interviews</p>\n        <div className=\"container\">\n          {finalScehule.map((itr) => {\n\n            return (\n              <div className=\"card\">\n                <div className='para-top'>\n                  <p className='date'><strong>Date:</strong> {itr.date} </p>\n                  <p className='time'><strong>Timing:</strong> {itr.startTime} to {itr.endTime}</p>\n                </div>\n                <p className='date'><strong>Participants:</strong></p>\n                <ul className=\"list-group\">\n                  {itr.participants.map((oneP) => (\n                    <li className=\"list-group-item\">{participantMap.get(oneP)}</li>\n                  ))}\n                </ul>\n                <Link\n                  to={{\n                    pathname: '/edit',\n                    state: {\n                      participants: itr.participants,\n                      pdate: itr.date,\n                      pstarttime: itr.startTime,\n                      pendtime: itr.endTime\n                    }\n                  }}>\n                 <button className='edit'>Edit Interview</button></Link>\n              </div>\n            )\n\n          })}\n        </div>\n      </div >\n    )\n  }\n}\n\nexport default InterviewList;"]},"metadata":{},"sourceType":"module"}